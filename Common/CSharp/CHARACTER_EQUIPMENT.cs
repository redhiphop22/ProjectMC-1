// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace common
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct CHARACTER_EQUIPMENT : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static CHARACTER_EQUIPMENT GetRootAsCHARACTER_EQUIPMENT(ByteBuffer _bb) { return GetRootAsCHARACTER_EQUIPMENT(_bb, new CHARACTER_EQUIPMENT()); }
  public static CHARACTER_EQUIPMENT GetRootAsCHARACTER_EQUIPMENT(ByteBuffer _bb, CHARACTER_EQUIPMENT obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CHARACTER_EQUIPMENT __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public common.CHARACTER_EQUIPMENT_TYPE Type { get { int o = __p.__offset(4); return o != 0 ? (common.CHARACTER_EQUIPMENT_TYPE)__p.bb.Get(o + __p.bb_pos) : common.CHARACTER_EQUIPMENT_TYPE.TOP; } }
  public uint Id { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<common.CHARACTER_EQUIPMENT> CreateCHARACTER_EQUIPMENT(FlatBufferBuilder builder,
      common.CHARACTER_EQUIPMENT_TYPE type = common.CHARACTER_EQUIPMENT_TYPE.TOP,
      uint id = 0) {
    builder.StartTable(2);
    CHARACTER_EQUIPMENT.AddId(builder, id);
    CHARACTER_EQUIPMENT.AddType(builder, type);
    return CHARACTER_EQUIPMENT.EndCHARACTER_EQUIPMENT(builder);
  }

  public static void StartCHARACTER_EQUIPMENT(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddType(FlatBufferBuilder builder, common.CHARACTER_EQUIPMENT_TYPE type) { builder.AddByte(0, (byte)type, 0); }
  public static void AddId(FlatBufferBuilder builder, uint id) { builder.AddUint(1, id, 0); }
  public static Offset<common.CHARACTER_EQUIPMENT> EndCHARACTER_EQUIPMENT(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<common.CHARACTER_EQUIPMENT>(o);
  }
};


}
